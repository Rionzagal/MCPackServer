<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@TitleIcon" /> @Title
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (_processing)
        {
            <MudProgressCircular Class="m-sm-n1" Size="Size.Large" Indeterminate="true" />
            <MudText Class="m-sm-2">Esperando respuesta de servidor...</MudText>
        }
        else
        {
            <MudContainer Style="max-height: 500px; overflow-y: scroll;">
                @if (States.Delete == State)
                {
                    <div class="form-group">
                        <MudText Typo="Typo.subtitle1" Align="Align.Center">
                            ¿Está seguro de eliminar artículo seleccionado?
                        </MudText>
                    </div>
                }
                <MudForm Model="Model" @ref="Form">
                    @if ((int)States.Add == State)
                    {
                        <div class="form-group">
                            <MudAutocomplete T="int" @bind-Value="Model.ProviderId" Label="Proveedor" Required
                        SearchFunc="f => ProvidersServerReload(f)" RequiredError="Seleccionar un proveedor"
                        ToStringFunc="new Func<int, string>(GetProviderName)" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <MudText Typo="Typo.subtitle1">
                                @($"Proveedor: {ModelView?.ProviderMarketName}")
                            </MudText>
                        </div>
                    }
                    <div class="form-group">
                        <MudTextField T="string" Label="SKU" @bind-Value="Model.SKU" ReadOnly="@Disabled" Immediate
                        MaxLength="@(Model.GetMaxLengthForProperty(nameof(Quotes.SKU)) ?? 5000)"
                        Counter="Model.GetMaxLengthForProperty(nameof(Quotes.SKU))" />
                    </div>
                    <div class="form-group">
                        <MudNumericField T="float" Label="Precio unitario" Required RequiredError="Insertar precio sugerido"
                        @bind-Value="Model.Price" Min="0f" Format="N4" Adornment="Adornment.Start" HideSpinButtons
                        AdornmentIcon="@Icons.Material.Filled.AttachMoney" ReadOnly="@Disabled"
                        Culture="@CultureInfo.GetCultureInfo("en-US")" />
                    </div>
                    <div class="form-group">
                        <MudSelect T="string" Label="Moneda de cotización" @bind-Value="Model.Currency"
                        Variant="Variant.Outlined" Required RequiredError="Inserte moneda de cotización"
                        ReadOnly="@Disabled" Disabled="0 == Model.ProviderId">
                            <MudSelectItem Value="@("MXN")" />
                            <MudSelectItem Value="@("USD")" />
                        </MudSelect>
                    </div>
                </MudForm>
            </MudContainer>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Class="mx-1" OnClick="() => Dialog.Cancel()" Disabled="_processing">
            Cerrar
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="@ButtonColor" Class="mx-1" OnClick="async () => await Submit()"
            Disabled="_processing">
            Confirmar
        </MudButton>
    </DialogActions>
</MudDialog>