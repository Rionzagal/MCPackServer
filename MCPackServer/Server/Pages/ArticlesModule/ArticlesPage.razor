@page "/Articles"
@inject IProvidersService _providersService

@attribute [Authorize (Policy = @Constants.Permissions.Articles.View)]

<MudText Typo="Typo.h3" Align="Align.Center">CATÁLOGO DE MATERIALES Y COTIZACIONES</MudText>

<MudExpansionPanels MultiExpansion>
    <MudExpansionPanel @ref="GroupsPanel" Text="@($"Grupo seleccionado: {SelectedGroup.Name ?? "N/A"}")" IsInitiallyExpanded >
        <MudCard Class="my-2" Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudAutocomplete T="ArticleGroups" Label="Seleccionar grupo" @bind-Value="SelectedGroup" Clearable
                                     OnClearButtonClick="() => SelectedGroup = new()" SearchFunc="GroupsServerReload" 
                                     ToStringFunc="new Func<ArticleGroups, string>(GroupName)" />
                </CardHeaderContent>
                <CardHeaderActions>
                    @if (CanCreateGroup)
                    {
                        <MudTooltip Text="Añadir nuevo grupo">
                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Default"
                                           OnClick="async () => await CreateGroup()" />
                        </MudTooltip>
                    }
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudContainer Style="height: 100px; overflow-y: scroll;">
                    <MudText Typo="Typo.subtitle1">Código de grupo: @(SelectedGroup.Code ?? "N/A")</MudText>
                    <MudText>@SelectedGroup.Description</MudText>
                </MudContainer>
            </MudCardContent>
            <MudCardActions>
                @if (0 != SelectedGroup.Id && CanEditGroup)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-1"
                               OnClick="async () => await EditGroup()">
                        Editar
                    </MudButton>
                }
                @if (0 != SelectedGroup.Id && CanEditGroup)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Error" Class="mx-1"
                               OnClick="async () => await DeleteGroup()">
                        Eliminar
                    </MudButton>
                }
            </MudCardActions>
        </MudCard>
    </MudExpansionPanel>
    <MudExpansionPanel @ref="FamiliesPanel" Text="@($"Familia seleccionada: {SelectedFamily.Name ?? "N/A"}")"
                       Disabled="@(0 == SelectedGroup.Id)">
        <MudCard Class="my-2" Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudAutocomplete T="ArticleFamilies" Label="Seleccionar familia" @bind-Value="SelectedFamily" Clearable
                                     OnClearButtonClick="() => SelectedFamily = new()" SearchFunc="FamiliesServerReload" 
                                     ToStringFunc="new Func<ArticleFamilies, string>(FamilyName)" />
                </CardHeaderContent>
                <CardHeaderActions>
                    @if (CanCreateFamily)
                    {
                        <MudTooltip Text="Añadir nueva familia">
                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Default"
                                           OnClick="async () => await CreateFamily()" />
                        </MudTooltip>
                    }
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudContainer Style="height: 100px; overflow-y: scroll;">
                    <MudText Typo="Typo.subtitle1">Código de familia: @(SelectedFamily.Code ?? "N/A")</MudText>
                    <MudText>@SelectedFamily.Description</MudText>
                </MudContainer>
            </MudCardContent>
            <MudCardActions>
                @if (CanEditFamily && 0 != SelectedFamily.Id)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-1"
                               OnClick="async () => await EditFamily()">
                        Editar
                    </MudButton>
                }
                @if (CanDeleteFamily && 0 != SelectedFamily.Id)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Error" Class="mx-1" 
                               OnClick="async () => await DeleteFamily()" >
                        Eliminar
                    </MudButton>
                }
            </MudCardActions>
        </MudCard>
    </MudExpansionPanel>
    <MudExpansionPanel @ref="ArticlesPanel" Disabled="@(0 == SelectedFamily.Id)" IsExpandedChanged="RenderArticles" 
                       Text="@($"Artículo seleccionado: {SelectedArticle.Name ?? "N/A"}")">
        <MudPaper Class="my-3" Elevation="0">
            <MudTable @ref="ArticleTable" T="ArticlesView" Dense Hover FixedHeader Height="400px"
                      CustomHeader Striped OnRowClick="OnSelectedArticleRow" ServerData="ArticleServerReload">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Artículos registrados</MudText>
                    <MudSpacer />
                    @if (CanCreateArticle)
                    {
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-1"
                               OnClick="async () => await CreateArticle()" >
                            Añadir
                        </MudButton>
                    }
                    <MudButton Variant="Variant.Filled" Class="mx-1"
                               OnClick="DeleteArticleSearchFilters">
                        Borrar filtros de búsqueda
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" Class="ml-1" OnClick="FilterArticles">
                        <MudIcon Icon="@Icons.Material.Filled.Search" /> Buscar
                    </MudButton>
                </ToolBarContent>
                <HeaderContent>
                    <MudTHeadRow>
                        <MudTh><MudTableSortLabel SortLabel="Name" T="ArticlesView">Nomrbe</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortLabel="TradeMark" T="ArticlesView">Marca</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortLabel="Code" T="ArticlesView">Código</MudTableSortLabel></MudTh>
                    </MudTHeadRow>
                    <MudTHeadRow>
                        <MudTh>
                            <MudTextField T="string" @bind-Value="NameFilter" Placeholder="Buscar por nombre" Clearable />
                        </MudTh>
                        <MudTh>
                            <MudTextField T="string" @bind-Value="TradeMarkFilter" Placeholder="Buscar por marca" Clearable />
                        </MudTh>
                        <MudTh>
                            <MudTextField T="string" @bind-Value="CodeFilter" Placeholder="Buscar por código" Clearable />
                        </MudTh>
                    </MudTHeadRow>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Nombre">@context.Name</MudTd>
                    <MudTd DataLabel="Marca comercial">@(context.TradeMark ?? "N/A")</MudTd>
                    <MudTd DataLabel="Código">@context.Code</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    <MudText>Sin artículos encontrados</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>Cargando artículos...</MudText>
                </LoadingContent>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        </MudPaper>
    </MudExpansionPanel>
</MudExpansionPanels>

@if (VisibleArticleInformation)
{
    <MudPaper Class="my-3" Elevation="0">
        <MudText Typo="Typo.h6" Align="Align.Center" Class="mt-3">PRESENTANDO INFORMACIÓN PARA ARTÍCULO @SelectedArticle.Code</MudText>
        <MudTabs @ref="ArticleInformationTabs" Elevation="2" Rounded ApplyEffectsToContainer Color="Color.Primary">
            <Header>
                <MudTooltip Text="Cerrar artículo">
                    <MudIconButton Icon="@Icons.Material.Filled.Close"
                                   OnClick="(_) => { SelectedArticle = new(); VisibleArticleInformation = false; }" />
                </MudTooltip>
                @if (CanEditArticle)
                {
                    <MudTooltip Text="Editar artículo">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Secondary"
                                       OnClick="async () => await EditArticle()" />
                    </MudTooltip>
                }
                @if (CanDeleteArticle)
                {
                    <MudTooltip Text="Eliminar artículo">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                                       OnClick="async () => await DeleteArticle()" />
                    </MudTooltip>
                }
            </Header>
            <TabPanelHeader>
                @if (context.Text.StartsWith("Cotización:"))
                {
                    <MudTooltip Text="Cerrar cotización">
                        <MudIconButton Class="ml-2 pa-1" Icon="@Icons.Material.Filled.Close"
                                       OnClick="(_) => RemoveTab(tabPanel: context)" />
                    </MudTooltip>
                }
            </TabPanelHeader>
            <ChildContent>
                <MudTabPanel Text="Información General" ID="@Guid.NewGuid()" Tag="@Guid.NewGuid()">
                    <MudGrid Class="m-3" Style="width: inherit; height:500px; overflow-y:scroll;">
                        <MudItem xs="12">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Código</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@SelectedArticle.Code" ReadOnly />
                        </MudItem>
                        <MudItem xs="12">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Nombre</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@SelectedArticle.Name" ReadOnly />
                        </MudItem>
                        <MudItem xs="12">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Descripción</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@SelectedArticle.Description" ReadOnly />
                        </MudItem>
                        <MudItem xs="4">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Marca</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@(SelectedArticle.TradeMark ?? "N/A")" ReadOnly />
                        </MudItem>
                        <MudItem xs="4">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Modelo</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@(SelectedArticle.Model ?? "N/A")" ReadOnly />
                        </MudItem>
                        <MudItem xs="4">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Unidad</MudText>
                            <MudTextField Variant="Variant.Outlined" Value="@SelectedArticle.Unit" ReadOnly />
                        </MudItem>
                    </MudGrid>
                </MudTabPanel>
                @if (CanViewQuote)
                {
                    <MudTabPanel Text="Cotizaciones" ID="@Guid.NewGuid()" Tag="@Guid.NewGuid()" >
                        <MudPaper Elevation="0" Class="my-3" Style="height:500px;">
                            <MudTable @ref="QuoteTable" T="QuotesView" Dense Hover FixedHeader
                                      CustomHeader Striped Height="400px" OnRowClick="OnSelectedQuoteRow"
                                      ServerData="QuotesServerReload">
                                <ToolBarContent>
                                    <MudText Typo="Typo.h6">Cotizaciones registradas</MudText>
                                    <MudSpacer />
                                    @if (CanCreateQuote)
                                    {
                                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-1"
                                               OnClick="async () => await CreateQuote()" >
                                            Añadir cotización
                                        </MudButton>                                     
                                    }
                                    <MudButton Variant="Variant.Filled" Class="mx-1" OnClick="DeleteQuoteFilters">
                                        Borrar filtros de búsqueda
                                    </MudButton>
                                    <MudButton Variant="Variant.Outlined" Class="ml-1" OnClick="FilterQuotes">
                                        <MudIcon Icon="@Icons.Material.Filled.Search" /> Buscar
                                    </MudButton>
                                </ToolBarContent>
                                <HeaderContent>
                                    <MudTHeadRow>
                                        <MudTh><MudTableSortLabel SortLabel="ProviderId" T="QuotesView">Proveedor</MudTableSortLabel></MudTh>
                                        <MudTh><MudTableSortLabel SortLabel="SKU" T="QuotesView">SKU</MudTableSortLabel></MudTh>
                                        <MudTh><MudTableSortLabel SortLabel="Price" T="QuotesView">Precio</MudTableSortLabel></MudTh>
                                        <MudTh><MudTableSortLabel SortLabel="Currency" T="QuotesView">Divisa</MudTableSortLabel></MudTh>
                                        <MudTh><MudTableSortLabel SortLabel="DateUpdated" T="QuotesView">Fecha de actualización</MudTableSortLabel></MudTh>
                                    </MudTHeadRow>
                                    <MudTHeadRow>
                                        <MudTh>
                                            <MudAutocomplete T="int" Label="Buscar por proveedor" @bind-Value="ProviderFilter"
                                                             SearchFunc="f => ProvidersServerReload(f, false)" Clearable
                                                             ToStringFunc="new Func<int, string>(GetProviderName)"
                                                             OnClearButtonClick="() => ProviderFilter = 0" />
                                        </MudTh>
                                        <MudTh />
                                        <MudTh />
                                        <MudTh>
                                            <MudSelect T="string" @bind-Value="CurrencyFilter" Clearable Placeholder="Moneda">
                                                <MudSelectItem Value="@("MXN")" />
                                                <MudSelectItem Value="@("USD")" />
                                            </MudSelect>
                                        </MudTh>
                                        <MudTh />
                                    </MudTHeadRow>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Proveedor">@context.ProviderMarketName</MudTd>
                                    <MudTd DataLabel="SKU">@(context.SKU ?? "N/A")</MudTd>
                                    <MudTd DataLabel="Precio">$@context.Price.ToString("n2")</MudTd>
                                    <MudTd DataLabel="Divisa">@context.Currency</MudTd>
                                    <MudTd DataLabel="Fecha de actualización">@context.DateUpdated.ToShortDateString()</MudTd>
                                </RowTemplate>
                                <NoRecordsContent>
                                    <MudText>Sin cotizaciones encontradas</MudText>
                                </NoRecordsContent>
                                <LoadingContent>
                                    <MudText>Cargando cotizaciones...</MudText>
                                </LoadingContent>
                                <PagerContent>
                                    <MudTablePager />
                                </PagerContent>
                            </MudTable>
                        </MudPaper>
                    </MudTabPanel>
                    @foreach (var quote in SelectedQuotes)
                    {
                        <MudTabPanel Text="@($"Cotización: {quote.ProviderMarketName}")" Tag="@quote.Id" ID="@quote.Id">
                            <MudCard Class="m-3" Elevation="0">
                                <MudCardHeader Style="height:100px;">
                                    <CardHeaderContent>
                                        <MudText Typo="Typo.subtitle1">
                                            <b>Artículo cotizado con:</b> @quote.ProviderMarketName
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent Style="height:300px; overflow-y:scroll;">
                                    <MudGrid>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.subtitle1" Align="Align.Left">SKU</MudText>
                                            <MudTextField Value="@(quote.SKU ?? "N/A")" Variant="Variant.Outlined" ReadOnly />
                                        </MudItem>
                                        <MudItem xs="6">
                                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Precio sugerido</MudText>
                                            <MudTextField Value="@($"${quote.Price.ToString("n4")} {quote.Currency}")" Variant="Variant.Outlined" ReadOnly />
                                        </MudItem>
                                        <MudItem xs="6">
                                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Precio con descuento</MudText>
                                            <MudTextField Value="@($"${(quote.Price*(1 - quote.ProviderDiscount/100)).ToString("n4")} {quote.Currency}")"
                                                Variant="Variant.Outlined" ReadOnly />
                                        </MudItem>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Última fecha de actualización</MudText>
                                            <MudTextField Value="@quote.DateUpdated" Format="dddd, MMM dd yyyy" Variant="Variant.Outlined" ReadOnly />
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                                <MudCardActions Style="height:100px;">
                                    @if (CanEditQuote)
                                    {
                                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-1"
                                               OnClick="async () => await EditQuote(quote)" >
                                            Actualizar
                                        </MudButton>
                                    }
                                    @if (CanDeleteQuote)
                                    {
                                        <MudButton Variant="Variant.Filled" Color="Color.Error" Class="mx-1"
                                                   OnClick="async () => await DeleteQuote(quote)" >
                                            Eliminar
                                        </MudButton>
                                    }
                                </MudCardActions>
                            </MudCard>
                        </MudTabPanel>
                    }
                }
            </ChildContent>
        </MudTabs>
    </MudPaper>
}