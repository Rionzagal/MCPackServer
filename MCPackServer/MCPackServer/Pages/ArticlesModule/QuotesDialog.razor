@inject IQuotesService _quotesService
@inject IProvidersService _providersService
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@TitleIcon" /> @Title
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (_processing)
        {
            <MudProgressCircular Class="m-sm-n1" Size="Size.Large" Indeterminate="true" />
            <MudText Class="m-sm-2">Esperando respuesta de servidor...</MudText>
        }
        else
        {
            <MudContainer Style="max-height: 500px; overflow-y: scroll;">
                @if (States.Delete == (States)State)
                {
                    <div class="form-group">
                        <MudText Typo="Typo.subtitle1" Align="Align.Center">
                            ¿Está seguro de eliminar artículo seleccionado?
                        </MudText>
                    </div>
                }
            <MudForm Model="Model" @ref="Form">
                @if ((int)States.Add == State)
                {
                    <div class="form-group">
                        <MudAutocomplete T="int" @bind-Value="Model.ProviderId"
                                         Label="Proveedor"
                                         SearchFunc="f => ProvidersServerReload(f)"
                                         ToStringFunc="new Func<int, string>(GetProviderName)"
                                         Required="true"
                                         RequiredError="Seleccionar un proveedor" />
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <MudText Typo="Typo.subtitle1">
                            @($"Proveedor: {Model.Provider.MarketName}")
                        </MudText>
                    </div>
                }
                <div class="form-group">
                    <MudTextField T="string" Label="SKU"
                                  @bind-Value="Model.SKU"
                                  ReadOnly="@Disabled" />
                </div>
                <div class="form-group">
                    <MudNumericField T="float" Label="Precio unitario" Required="true"
                                     RequiredError="Insertar precio sugerido"
                                     @bind-Value="Model.Price" Min="0f" Format="N2"
                                     Adornment="Adornment.Start" HideSpinButtons="true"
                                     AdornmentIcon="@Icons.Material.Filled.AttachMoney"
                                     ReadOnly="@Disabled" />
                </div>
                <div class="form-group">
                    <MudSelect T="string" Label="Moneda de cotización" @bind-Value="Model.Currency"
                               Variant="Variant.Outlined" Required="true"
                               RequiredError="Inserte moneda de cotización"
                               ReadOnly="@Disabled" Disabled="0 == Model.ProviderId">
                        <MudSelectItem Value="@("MXN")" />
                        <MudSelectItem Value="@("USD")" />
                    </MudSelect>
                </div>
            </MudForm>
            </MudContainer>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Class="mx-1"
                   OnClick="() => Dialog.Cancel()" Disabled="_processing">
            Cerrar
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="@ButtonColor" Class="mx-1"
                   OnClick="async () => await Submit()" Disabled="_processing">
            Confirmar
        </MudButton>
    </DialogActions>
</MudDialog>