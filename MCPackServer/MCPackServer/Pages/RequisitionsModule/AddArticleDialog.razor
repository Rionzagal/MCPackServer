@using MCPackServer.Entities
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@TitleIcon" /> @Title
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (_processing)
        {
            <MudProgressCircular Class="m-sm-n1" Size="Size.Large" Indeterminate />
            <MudText Class="m-sm-2">Esperando respuesta de servidor...</MudText>
        }
        else
        {
            <MudContainer Style="max-height: 500px; overflow-y: scroll;">
                <MudTable @ref="ArticlesTable" T="RequisitionArticlesView" MultiSelection Hover FixedHeader Height="350px"
                          CanCancelEdit
                          ServerData="new Func<TableState, Task<TableData<RequisitionArticlesView>>>(ArticlesServerReload)"
                          @bind-SelectedItems="@SelectedArticles" Class="my-3">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Artículos cotizados</MudText>
                        <MudSpacer />
                        <MudAutocomplete T="int?" @bind-Value="GroupFilter" Clearable Label="Filtrar por grupo"
                                         SearchFunc="(f) => SearchGroupFilters(f)" Class="mx-3" Variant="Variant.Outlined"
                                         ToStringFunc="new Func<int?, string>(GetGroupName)"  />
                        <MudAutocomplete T="int?" @bind-Value="FamilyFilter" Clearable Label="Filtrar por familia"
                                         SearchFunc="(f) => SearchFamilyFilters(f, GroupFilter)" Class="mx-3" Variant="Variant.Outlined"
                                         ToStringFunc="new Func<int?, string>(GetFamilyName)"  />
                        <MudButton Variant="Variant.Outlined" OnClick="() => ArticlesTable.ReloadServerData()" Class="ml-3">
                            Buscar <MudIcon Icon="@Icons.Material.Filled.Search" />
                        </MudButton>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel T="ArticlesView" SortLabel="Code" />Código</MudTh>
                        <MudTh><MudTableSortLabel T="ArticlesView" SortLabel="Name" />Nombre</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<RequisitionArticlesView, object>(x => x.ProjectId)" />
                            Proyecto
                        </MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<RequisitionArticlesView, object>(x => x.Quantity)" />
                            Cantidad
                        </MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Código">@context.ArticleCode</MudTd>
                        <MudTd DataLabel="Name">@context.ArticleName</MudTd>
                        <MudTd DataLabel="Proyecto">@(0 != context.ProjectId ? context.ProjectNumber : "N/A")</MudTd>
                        <MudTd DataLabel="Quantity">@($"{context.Quantity} {context.Unit}")</MudTd>
                    </RowTemplate>
                    <RowEditingTemplate>
                        <MudTd DataLabel="Código">@context.ArticleCode</MudTd>
                        <MudTd DataLabel="Name">@context.ArticleName</MudTd>
                        <MudTd DataLabel="Proyecto">
                            <MudAutocomplete T="int" Value="context.ProjectId" SearchFunc="f => ProjectsServerReload(f)"
                                ToStringFunc="new Func<int, string>(GetProjectNumber)" 
                                ValueChanged="(id) => { context.ProjectId = id; context.ProjectNumber = GetProjectNumber(id); }"/>
                        </MudTd>
                        <MudTd DataLabel="Quantity">
                            <MudNumericField T="int" @bind-Value="@context.Quantity" Required
                                             Min="1" Step="1" Culture="@CultureInfo.GetCultureInfo("en-US")" />
                        </MudTd>
                    </RowEditingTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                    <LoadingContent>
                        Cargando artículos cotizados...
                    </LoadingContent>
                    <NoRecordsContent>
                        No se encontraron artículos cotizados.
                    </NoRecordsContent>
                </MudTable>
            </MudContainer>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Class="mx-1"
                   OnClick="() => Dialog?.Cancel()" Disabled="_processing">
            Cerrar
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="@ButtonColor" Class="mx-1"
                   OnClick="async () => await Submit()"
                   Disabled="_processing">
            Confirmar
        </MudButton>
    </DialogActions>
</MudDialog> 